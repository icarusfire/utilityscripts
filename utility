trigger: none
pool:
  vmImage: ubuntu-latest

steps:
# ──────────────────────────────────────────────────────────────────────────────
# 1) Pick a Python runtime
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'

# ──────────────────────────────────────────────────────────────────────────────
# 2) Read files, build the text, percent-escape newlines, publish variables
- task: PythonScript@0
  name: setNotes
  displayName: Build and escape release notes
  inputs:
    scriptSource: inline
    script: |
      import os, pathlib, urllib.parse

      # locate your folder and files
      ws = os.getenv('PIPELINE_WORKSPACE')
      root = pathlib.Path(ws) / 'ReleaseNotes' / 'ReleaseNotesKansCHG'
      rel_dir = next(p for p in root.iterdir() if p.is_dir())
      rel_num = rel_dir.name.split(' ')[0]

      # read and combine
      notes   = (root / 'RELEASE_NOTES.md').read_text()
      all_txt = (rel_dir / f'{rel_num}_all.txt').read_text()
      combined = notes + '\n\n' + all_txt

      # percent-encode EVERYTHING, including \n → %0A, \r → %0D, % → %25
      safe = urllib.parse.quote(combined, safe='')

      # publish three variables
      print(f"##vso[task.setvariable variable=releaseNumber;]{rel_num}")
      print(f"##vso[task.setvariable variable=shortDescription;]Welcome to release {rel_num}")
      print(f"##vso[task.setvariable variable=descriptionEsc;]{safe}")

# ──────────────────────────────────────────────────────────────────────────────
# 3) (Optional) Verify that at runtime you really DO get the multi-line text
- task: PythonScript@0
  displayName: Verify descriptionEsc decoded
  inputs:
    scriptSource: inline
    script: |
      import os, textwrap
      esc = os.getenv('descriptionEsc')
      # reverse the URL-encoding
      dec = esc.replace('%0A','\n').replace('%0D','\r').replace('%25','%')
      print('--- decoded release text ---')
      print(textwrap.indent(dec, '  '))

# ──────────────────────────────────────────────────────────────────────────────
# 4) Any downstream task can now take $(descriptionEsc) as an input and
#    the agent will have already un-escaped %0A → newline for you. Example:
- task: MyCustomTask@1
  displayName: Consume the full release notes
  inputs:
    releaseNumber: $(releaseNumber)
    title:         $(shortDescription)
    fullNotes:     $(descriptionEsc)
