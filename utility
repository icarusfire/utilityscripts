trigger: none
pool:
  vmImage: ubuntu-latest

steps:
#───────────────────────────────────────────────────────────────────────────────
# 1) Select Python
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'

#───────────────────────────────────────────────────────────────────────────────
# 2) Read, combine, manually escape only %, CR, LF, and publish variables
- task: PythonScript@0
  name: setNotes
  displayName: Build & escape release notes
  inputs:
    scriptSource: inline
    script: |
      import os, pathlib

      # locate your workspace files
      ws   = os.getenv('PIPELINE_WORKSPACE')
      root = pathlib.Path(ws) / 'ReleaseNotes' / 'ReleaseNotesKansCHG'
      rel_dir = next(d for d in root.iterdir() if d.is_dir())
      rel_num = rel_dir.name.split(' ')[0]

      # read + combine
      notes   = (root / 'RELEASE_NOTES.md').read_text()
      all_txt = (rel_dir / f'{rel_num}_all.txt').read_text()
      combined = notes + '\n\n' + all_txt

      # manual Azure escape: only %, CR, LF
      safe = (combined
              .replace('%', '%25')
              .replace('\r', '%0D')
              .replace('\n', '%0A'))

      # publish pipeline variables
      print(f"##vso[task.setvariable variable=releaseNumber]{rel_num}")
      print(f"##vso[task.setvariable variable=shortDescription]Welcome to release {rel_num}")
      print(f"##vso[task.setvariable variable=descriptionEsc]{safe}")

#───────────────────────────────────────────────────────────────────────────────
# 3) (Optional) Verify at runtime that you really get multi-line text back
- task: PythonScript@0
  displayName: Decode & verify descriptionEsc
  env:
    DESCRIPTION_ESC: $(descriptionEsc)
  inputs:
    scriptSource: inline
    script: |
      import os, textwrap
      esc = os.getenv('DESCRIPTION_ESC')
      # reverse only the three Azure escapes
      dec = (esc
             .replace('%0A', '\n')
             .replace('%0D', '\r')
             .replace('%25', '%'))
      print('--- decoded release text ---')
      print(textwrap.indent(dec, '  '))

#───────────────────────────────────────────────────────────────────────────────
# 4) Any downstream task—custom or built-in—can now accept $(descriptionEsc)
- task: MyCustomTask@1
  displayName: Consume full release notes
  inputs:
    releaseNumber: $(releaseNumber)
    title:         $(shortDescription)
    fullNotes:     $(descriptionEsc)
